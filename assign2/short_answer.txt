Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Warmup
------
Q1. The display of the Stack in the debugger uses the labels `top` and `bottom` to mark the two ends of the stack. How are the contents labeled when the Stack contains only one element?
A1. bottom/top

Q2. For which type of inputs does the function go into an infinite loop?
A2. when the input queue has all negative elements, the loop goes infinitely. The q.size() will change in each iteration and make the loop continue.

Q3. Show your edited code for duplicateNegatives that fixes the problem with the infinite loop
A3. At the beginning of the function I added a variable that stores the length of the queue for latter use. Therefore the loop will just go the initial size of the queue instead of updating the queue size.

Q4. What is the better fix to `sumStack` that corrects the bug?
A4. Initialize the `total` variable to 0 instead of s.pop().

Maze
-------
Q5. In lecture, Cynthia noted the convention is to pass large data structures by reference for reasons of efficiency. Why then do you think `validatePath` passes `path` by value instead of by reference?
A5. The function involves operation on the value of `path`, if passed by reference, the function will clear the path and influence the outside value of the `path` variable.

Q6. After you have written your tests, describe your testing strategy to determine that your `validatePath` works as intended.
A6. I've tested the case of a 1x1 maze and some path that has a `skip` in its path. The function works well both in identifying working paths and failed paths.

Search Engine
-------------
Q7. Sketch the contents of the inverted index built from the `res/tiny.txt` database file.
A7. {"milk": {"www.shoppinglist.com"}, "fish": {"www.shoppinglist.com", "www.dr.seuss.net", "www.bigbadwolf.com"}, "bread": {"www.shoppinglist.com"}, "5lb_m&ms": {"www.shoppinglist.com"}, "red": {"www.rainbow.org", "www.dr.seuss.net"}, "green": {"www.rainbow.org"}, "blue": {"www.rainbow.org", "www.dr.seuss.net"}, "one": {"www.dr.seuss.net"}, "two": {"www.dr.seuss.net"}, "i": {"www.bigbadwolf.com"}, "eat": {"www.bigbadwolf.com"}}

Beyond Algorithmic Analysis
---------------------------
Q8. In a short paragraph, describe a real or plausible scenario not previously presented in lecture in which using techniques like Big-O or Asymptotic Analysis to improve the performance of an algorithm might benefit the environment. Include your thoughts on how a software engineer working on this piece of code might identify such potential benefits and take them into consideration when designing the code.
A8. During the pandemic of COVID-19, China government has come out soome ways to track people's traveling from citi to city. It generally uses the phone number and the connection between your phone and the local base station. As we well knew, China has a population over 1.4 billion, collecting, storing, retrieving and sharing this amount of data is definitely not a easy thing. Database operations must be strictly optimized to reduce the Big-O to make the operation doable in a reasonable amount of time. From my point of view, the designer of the database should be really careful that the data is organized. Otherwise, this is not only a big pressure to the disk, but also a pressure to the response time.

Q9. According to the contract that IBM struck with the state of Indiana, the criteria for optimization were improving efficiency of the overall welfare system and reducing fraud. Criteria for reducing wait times and wrongful denials were not included.  However, wrongfully denying benefits has a huge negative  impact on the citizens who rely on the system.  If criteria like minimizing wrongful denials were not included in the contract, should engineers have included them in their optimization algorithm?  Why or why not?
A9. They should include it in their optimization. The basic of optimization is that the functionality still persists. Otherwise, it is not a `optimization`. Although, soometimes, the optimization of a program has some cost on the accuracy of the result, this is only applied to problems that the subtle loss of the accuracy does not affect the data's value, and the speed improvement is really big.

Q10. Imagine that after completing CS106B you are hired at IBM as an engineer working on this system. How might you have approached designing and setting the goals of this system?  How might you apply algorithmic analysis tools to build a system that achieved the desired goals? Could you do so in a way that avoids the severe negative impacts on users of the system that are outlined in the case study?
A10. The goal of the system is to optimize the waiting time only when quality of service is ensured. Also, we could use a QoS algorithm to allocate our resources to the important and urgent calls first. In addition, a proper estimation of the total resources needed to provide a service is also necessary. After estimation of the possible pressure of the system, we should design algorithms that has low complexity to reduce the cost and boost efficiency.
